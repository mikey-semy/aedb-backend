"""add_converter_tables

Revision ID: 904adf79a351
Revises: b0296817b493
Create Date: 2024-12-05 22:46:27.922791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '904adf79a351'
down_revision: Union[str, None] = 'b0296817b493'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mill_shops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mill_shops_id'), 'mill_shops', ['id'], unique=False)
    op.create_table('production_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mill_shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['mill_shop_id'], ['mill_shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_production_lines_id'), 'production_lines', ['id'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('production_line_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['production_line_id'], ['production_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('cabinets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cabinets_id'), 'cabinets', ['id'], unique=False)
    op.create_table('converters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cabinet_id', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('nominal_current', sa.Float(), nullable=True),
    sa.Column('current_type', sa.String(), nullable=True),
    sa.Column('power', sa.Float(), nullable=True),
    sa.Column('input_voltage', sa.Float(), nullable=True),
    sa.Column('output_voltage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['cabinet_id'], ['cabinets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_converters_id'), 'converters', ['id'], unique=False)
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('converter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['converter_id'], ['converters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_units_id'), 'units', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_units_id'), table_name='units')
    op.drop_table('units')
    op.drop_index(op.f('ix_converters_id'), table_name='converters')
    op.drop_table('converters')
    op.drop_index(op.f('ix_cabinets_id'), table_name='cabinets')
    op.drop_table('cabinets')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_production_lines_id'), table_name='production_lines')
    op.drop_table('production_lines')
    op.drop_index(op.f('ix_mill_shops_id'), table_name='mill_shops')
    op.drop_table('mill_shops')
    # ### end Alembic commands ###
